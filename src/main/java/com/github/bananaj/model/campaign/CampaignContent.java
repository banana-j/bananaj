/**
 * @author alexanderweiss
 * @date 12.12.2015
 */
package com.github.bananaj.model.campaign;

import java.net.URL;

import org.json.JSONObject;

public class CampaignContent {

	private Campaign campaign;
	private String plainText;
	private String html;
	private String archiveHtml;
	
	protected CampaignContent(Campaign campaign, JSONObject jsonObj) {
		this.campaign = campaign;
		parse(jsonObj);
	}

	protected CampaignContent(String plain_text, String html, Campaign campaign) {
		this.campaign = campaign;
		this.plainText = plain_text;
		this.html = html;
	}

	private void parse(JSONObject jsonObj) {
		this.plainText = jsonObj.optString("plain_text",null);
		this.html = jsonObj.optString("html",null);
		this.archiveHtml =  jsonObj.optString("archive_html",null);
	}
	
	/**
	 * Set the html content of this campaign. Plain text will be automatically generated by MailChimp
	 * @param htmlContent
	 * @throws Exception
	 */
	public void changeHTMLContent(String htmlContent) throws Exception{
		JSONObject content = new JSONObject();
		content.put("html", htmlContent);
		String response = getCampaign().getConnection().do_Put(new URL(getCampaign().getConnection().getCampaignendpoint()+"/"+this.getCampaign().getId()+"/content"),content.toString(), this.getCampaign().getConnection().getApikey());
		content = new JSONObject(response);
		parse(content);
	}

	/**
	 * Set the html and plain content of this campaign.
	 * @param htmlContent
	 * @throws Exception
	 */
	public void changeHTMLContent(String htmlContent, String textContent) throws Exception{
		JSONObject content = new JSONObject();
		content.put("html", htmlContent);
		content.put("plain_text", textContent);
		String response = getCampaign().getConnection().do_Put(new URL(getCampaign().getConnection().getCampaignendpoint()+"/"+this.getCampaign().getId()+"/content"),content.toString(), this.getCampaign().getConnection().getApikey());
		content = new JSONObject(response);
		parse(content);
	}

	/**
	 * @return the plain text
	 */
	public String getPlainText() {
		return plainText;
	}

	/**
	 * @return the html
	 */
	public String getHtml() {
		return html;
	}

	/**
	 * @return the archive html
	 */
	public String getArchiveHtml() {
		return archiveHtml;
	}

	/**
	 *
	 * @return the campaign this content belongs to
	 */
	public Campaign getCampaign() {
		return campaign;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		return getHtml();
	}

}
